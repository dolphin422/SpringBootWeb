<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 引入 application.properties -->
    <!--    <properties resource="generator.properties"/>-->
    <!-- MyBatis3Simple：不生成 Example相关类及方法 -->
    <context id="MySQL" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="javaFileEncoding" description="UTF-8"/>
        <!--开始和结束分隔符，对于有关键字的情况下适用-->
        <property name="autoDelimitKeywords" description="true"/>
        <property name="beginningDelimiter" description="`"/>
        <property name="endingDelimiter" description="`"/>
        <!--是否强制生成注解，默认 false，如果设置为 true，不管数据库名和字段名是否一致，都会生成注解（包含 @Table 和 @Column-->
        <!--      <property name="forceAnnotation" description="true"/>-->
        <!--是否使用通用 Mapper 提供的注释工具，默认 true 使用，这样在生成代码时会包含字段的注释（目前只有 mysql 和 oracle 支持），
        设置 false 后会用默认的，或者你可以配置自己的注释插件-->
        <!-- <property name="useMapperCommentGenerator" description="true"/>-->
        <!--是否区分大小写，默认值 false。如果数据库区分大小写，这里就需要配置为 true，
        这样当表名为 USER 时，会生成 @Table(name = "USER") 注解，否则使用小写 user 时会找不到表.-->
        <!-- <property name="caseSensitive" description="false"/>-->
        <!--插件-->
        <plugin type="${mapper.plugin}">
            <property name="mappers" description="${mapper.Mapper}"/>
        </plugin>
        <!--自定义通用Mapper接口，所有生成的mapper接口都会继承这个接口, 不可使该接口被扫描到-->
        <!--<plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers"
                      description="com.dolphin422.common.base.IBaseDao"/>
        </plugin>-->
        <!-- 生成 JavaBean 对象重写 toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!-- 生成 JavaBean 对象继承 Serializable 类 -->
        <!-- <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>-->
        <!-- 生成 JavaBean 对象重写 equals 和 hashCode 方法 -->
        <!-- <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" description="true"/>
        </commentGenerator>
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/dolphin?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8"
                        userId="root"
                        password="111111">
        </jdbcConnection>

        <!-- 默认false，把JDBC DECIMAL和NUMERIC类型解析为 Integer，
            为 true时把JDBC DECIMAL和NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" description="true"/>
        </javaTypeResolver>

        <!-- targetProject:生成PO类的位置 -->
        <javaModelGenerator targetPackage="com.dolphin422.generator.model"
                            targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" description="false"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" description="false"/>
            <!--<property name="rootClass" description=""/>-->
        </javaModelGenerator>
        <!-- targetProject:mapper映射文件生成的位置
           如果maven工程只是单独的一个工程，targetProject="src/main/java"
           若果maven工程是分模块的工程，targetProject="所属模块的名称"，例如：
           targetProject="ecps-manager-mapper"，下同-->
        <sqlMapGenerator targetPackage="com.dolphin422.generator.xml"
                         targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" description="false"/>
        </sqlMapGenerator>
        <!-- targetPackage：mapper接口生成的位置 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.dolphin422.generator.dao"
                             targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" description="false"/>
        </javaClientGenerator>
        <!--要生成Model的表-->
        <table tableName="ar_article" domainObjectName="ArticleModel" mapperName="IArticleDao">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
            <!--逆向工程1.3.6及以上版本才可用-->
            <!-- <domainObjectRenamingRule searchString="^Sys" replaceString=""/>-->
        </table>
        <table tableName="ar_article_content" domainObjectName="ArticleContentModel" mapperName="IArticleContentDao">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
            <!--逆向工程1.3.6及以上版本才可用-->
            <!-- <domainObjectRenamingRule searchString="^Sys" replaceString=""/>-->
        </table>
    </context>
</generatorConfiguration>